[{"C:\\My_Project\\my-app\\src\\reportWebVitals.js":"1","C:\\My_Project\\my-app\\src\\index.js":"2","C:\\My_Project\\my-app\\src\\redux\\profile-reducer.js":"3","C:\\My_Project\\my-app\\src\\redux\\redux-store.js":"4","C:\\My_Project\\my-app\\src\\redux\\user-reducer.js":"5","C:\\My_Project\\my-app\\src\\redux\\auth-reducer.js":"6","C:\\My_Project\\my-app\\src\\App.js":"7","C:\\My_Project\\my-app\\src\\components\\Video\\Video.jsx":"8","C:\\My_Project\\my-app\\src\\components\\Security\\Security.jsx":"9","C:\\My_Project\\my-app\\src\\components\\Settings\\Settings.jsx":"10","C:\\My_Project\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"11","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileContainer.jsx":"12","C:\\My_Project\\my-app\\src\\components\\Login\\Login.jsx":"13","C:\\My_Project\\my-app\\src\\components\\Dialogs\\Dialogs.jsx":"14","C:\\My_Project\\my-app\\src\\components\\Header\\Header.jsx":"15","C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"16","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"17","C:\\My_Project\\my-app\\src\\redux\\dialogs-reducer.js":"18","C:\\My_Project\\my-app\\src\\components\\News\\News.jsx":"19","C:\\My_Project\\my-app\\src\\components\\Common\\Preloader\\Preloader.js":"20","C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"21","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"22","C:\\My_Project\\my-app\\src\\serviceWorker.js":"23","C:\\My_Project\\my-app\\src\\components\\Users\\Users.jsx":"24","C:\\My_Project\\my-app\\src\\components\\Dialogs\\Message\\Message.jsx":"25","C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\Posts\\Post.jsx":"26","C:\\My_Project\\my-app\\src\\components\\About_us\\About_us.jsx":"27","C:\\My_Project\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"28","C:\\My_Project\\my-app\\src\\components\\Navbar\\Navbar.jsx":"29","C:\\My_Project\\my-app\\src\\api\\api.js":"30","C:\\My_Project\\my-app\\src\\components\\Profile\\Profile.jsx":"31","C:\\My_Project\\my-app\\src\\components\\hok\\withAuthRedirect.js":"32","C:\\My_Project\\my-app\\src\\components\\Music\\Music.jsx":"33","C:\\My_Project\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"34","C:\\My_Project\\my-app\\src\\components\\Common\\FormControl\\FormsControls.js":"35","C:\\My_Project\\my-app\\src\\components\\validators\\validators.js":"36","C:\\My_Project\\my-app\\src\\redux\\sidebar-reducer.js":"37","C:\\My_Project\\my-app\\src\\components\\Users\\UsersContainer.jsx":"38","C:\\My_Project\\my-app\\src\\redux\\app-reducer.js":"39","C:\\My_Project\\my-app\\src\\redux\\users-selectors.js":"40","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks..jsx":"41","C:\\My_Project\\my-app\\src\\components\\utilites\\object-helpers.js":"42","C:\\My_Project\\my-app\\src\\components\\Common\\Paginator\\Paginator.jsx":"43","C:\\My_Project\\my-app\\src\\components\\Users\\User.jsx":"44","C:\\My_Project\\my-app\\src\\components\\hok\\withSuspence.js":"45","C:\\SPA_socialNetwork\\my-app\\src\\index.js":"46","C:\\SPA_socialNetwork\\my-app\\src\\App.js":"47","C:\\SPA_socialNetwork\\my-app\\src\\serviceWorker.js":"48","C:\\SPA_socialNetwork\\my-app\\src\\components\\hok\\withSuspence.js":"49","C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\Preloader\\Preloader.js":"50","C:\\SPA_socialNetwork\\my-app\\src\\components\\Navbar\\Navbar.jsx":"51","C:\\SPA_socialNetwork\\my-app\\src\\components\\Music\\Music.jsx":"52","C:\\SPA_socialNetwork\\my-app\\src\\components\\Video\\Video.jsx":"53","C:\\SPA_socialNetwork\\my-app\\src\\components\\Security\\Security.jsx":"54","C:\\SPA_socialNetwork\\my-app\\src\\components\\News\\News.jsx":"55","C:\\SPA_socialNetwork\\my-app\\src\\components\\Settings\\Settings.jsx":"56","C:\\SPA_socialNetwork\\my-app\\src\\components\\About_us\\About_us.jsx":"57","C:\\SPA_socialNetwork\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"58","C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"59","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileContainer.jsx":"60","C:\\SPA_socialNetwork\\my-app\\src\\components\\utilites\\object-helpers.js":"61","C:\\SPA_socialNetwork\\my-app\\src\\components\\hok\\withAuthRedirect.js":"62","C:\\SPA_socialNetwork\\my-app\\src\\components\\Header\\Header.jsx":"63","C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\Dialogs.jsx":"64","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\Profile.jsx":"65","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"66","C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\User.jsx":"67","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"68","C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"69","C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\Message\\Message.jsx":"70","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"71","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks..jsx":"72","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\Posts\\Post.jsx":"73","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"74","C:\\SPA_socialNetwork\\my-app\\src\\redux\\app-reducer.ts":"75","C:\\SPA_socialNetwork\\my-app\\src\\redux\\auth-reducer.ts":"76","C:\\SPA_socialNetwork\\my-app\\src\\redux\\dialogs-reducer.ts":"77","C:\\SPA_socialNetwork\\my-app\\src\\redux\\sidebar-reducer.ts":"78","C:\\SPA_socialNetwork\\my-app\\src\\redux\\profile-reducer.ts":"79","C:\\SPA_socialNetwork\\my-app\\src\\redux\\user-reducer.ts":"80","C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx":"81","C:\\SPA_socialNetwork\\my-app\\src\\redux\\redux-store.ts":"82","C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\UsersContainer.tsx":"83","C:\\SPA_socialNetwork\\my-app\\src\\redux\\users-selectors.ts":"84","C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\Users.tsx":"85","C:\\SPA_socialNetwork\\my-app\\src\\api\\api.ts":"86","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"87","C:\\SPA_socialNetwork\\my-app\\src\\components\\Login\\Login.tsx":"88","C:\\SPA_socialNetwork\\my-app\\src\\components\\validators\\validators.ts":"89","C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\FormControl\\FormsControls.tsx":"90"},{"size":362,"mtime":1610361012379,"results":"91","hashOfConfig":"92"},{"size":981,"mtime":1606739651000,"results":"93","hashOfConfig":"94"},{"size":3988,"mtime":1612772264019,"results":"95","hashOfConfig":"94"},{"size":1489,"mtime":1612795869988,"results":"96","hashOfConfig":"94"},{"size":6436,"mtime":1612886917271,"results":"97","hashOfConfig":"94"},{"size":2257,"mtime":1612771095847,"results":"98","hashOfConfig":"94"},{"size":3348,"mtime":1612971639651,"results":"99","hashOfConfig":"94"},{"size":182,"mtime":1598536330000,"results":"100","hashOfConfig":"94"},{"size":194,"mtime":1598536518000,"results":"101","hashOfConfig":"94"},{"size":194,"mtime":1598536498000,"results":"102","hashOfConfig":"94"},{"size":4152,"mtime":1610442779201,"results":"103","hashOfConfig":"94"},{"size":1635,"mtime":1610639328081,"results":"104","hashOfConfig":"94"},{"size":1801,"mtime":1610617678581,"results":"105","hashOfConfig":"94"},{"size":4133,"mtime":1610468638261,"results":"106","hashOfConfig":"94"},{"size":521,"mtime":1612965874221,"results":"107","hashOfConfig":"94"},{"size":3131,"mtime":1612441896117,"results":"108","hashOfConfig":"94"},{"size":1187,"mtime":1610351042392,"results":"109","hashOfConfig":"94"},{"size":2390,"mtime":1610442717683,"results":"110","hashOfConfig":"94"},{"size":178,"mtime":1598536904000,"results":"111","hashOfConfig":"94"},{"size":240,"mtime":1607424872677,"results":"112","hashOfConfig":"94"},{"size":1612,"mtime":1610444931260,"results":"113","hashOfConfig":"94"},{"size":624,"mtime":1612182650382,"results":"114","hashOfConfig":"94"},{"size":5085,"mtime":499162500000,"results":"115","hashOfConfig":"94"},{"size":1493,"mtime":1612886957509,"results":"116","hashOfConfig":"94"},{"size":198,"mtime":1598956054000,"results":"117","hashOfConfig":"94"},{"size":453,"mtime":1612968083623,"results":"118","hashOfConfig":"94"},{"size":194,"mtime":1598537062000,"results":"119","hashOfConfig":"94"},{"size":544,"mtime":1610633851784,"results":"120","hashOfConfig":"94"},{"size":1372,"mtime":1607072372000,"results":"121","hashOfConfig":"94"},{"size":2038,"mtime":1610528088558,"results":"122","hashOfConfig":"94"},{"size":598,"mtime":1609258725008,"results":"123","hashOfConfig":"94"},{"size":578,"mtime":1608639113752,"results":"124","hashOfConfig":"94"},{"size":187,"mtime":1598536616000,"results":"125","hashOfConfig":"94"},{"size":313,"mtime":1600348296000,"results":"126","hashOfConfig":"94"},{"size":821,"mtime":1610470846032,"results":"127","hashOfConfig":"94"},{"size":262,"mtime":1610468081240,"results":"128","hashOfConfig":"94"},{"size":142,"mtime":1606376272000,"results":"129","hashOfConfig":"94"},{"size":5157,"mtime":1612171759933,"results":"130","hashOfConfig":"94"},{"size":1407,"mtime":1610638226393,"results":"131","hashOfConfig":"94"},{"size":1171,"mtime":1612775278168,"results":"132","hashOfConfig":"94"},{"size":1710,"mtime":1612257042339,"results":"133","hashOfConfig":"94"},{"size":312,"mtime":1612775290703,"results":"134","hashOfConfig":"94"},{"size":1483,"mtime":1612886934838,"results":"135","hashOfConfig":"94"},{"size":2134,"mtime":1612862403399,"results":"136","hashOfConfig":"94"},{"size":307,"mtime":1612956600293,"results":"137","hashOfConfig":"94"},{"size":981,"mtime":1606739651000,"results":"138","hashOfConfig":"139"},{"size":4357,"mtime":1614164747742,"results":"140","hashOfConfig":"139"},{"size":5085,"mtime":499162500000,"results":"141","hashOfConfig":"139"},{"size":307,"mtime":1612956600293,"results":"142","hashOfConfig":"139"},{"size":240,"mtime":1607424872677,"results":"143","hashOfConfig":"139"},{"size":1372,"mtime":1607072372000,"results":"144","hashOfConfig":"139"},{"size":187,"mtime":1598536616000,"results":"145","hashOfConfig":"139"},{"size":182,"mtime":1598536330000,"results":"146","hashOfConfig":"139"},{"size":194,"mtime":1598536518000,"results":"147","hashOfConfig":"139"},{"size":178,"mtime":1598536904000,"results":"148","hashOfConfig":"139"},{"size":194,"mtime":1598536498000,"results":"149","hashOfConfig":"139"},{"size":194,"mtime":1598537062000,"results":"150","hashOfConfig":"139"},{"size":544,"mtime":1610633851784,"results":"151","hashOfConfig":"139"},{"size":4152,"mtime":1610442779201,"results":"152","hashOfConfig":"139"},{"size":3256,"mtime":1613384453944,"results":"153","hashOfConfig":"139"},{"size":312,"mtime":1612775290703,"results":"154","hashOfConfig":"139"},{"size":578,"mtime":1608639113752,"results":"155","hashOfConfig":"139"},{"size":521,"mtime":1612965874221,"results":"156","hashOfConfig":"139"},{"size":4133,"mtime":1610468638261,"results":"157","hashOfConfig":"139"},{"size":1003,"mtime":1613385945396,"results":"158","hashOfConfig":"139"},{"size":1612,"mtime":1610444931260,"results":"159","hashOfConfig":"139"},{"size":2134,"mtime":1612862403399,"results":"160","hashOfConfig":"139"},{"size":3142,"mtime":1613391431043,"results":"161","hashOfConfig":"139"},{"size":313,"mtime":1600348296000,"results":"162","hashOfConfig":"139"},{"size":198,"mtime":1598956054000,"results":"163","hashOfConfig":"139"},{"size":4572,"mtime":1613399064179,"results":"164","hashOfConfig":"139"},{"size":1725,"mtime":1613122634380,"results":"165","hashOfConfig":"139"},{"size":453,"mtime":1612968083623,"results":"166","hashOfConfig":"139"},{"size":2350,"mtime":1613397534437,"results":"167","hashOfConfig":"139"},{"size":1865,"mtime":1613758272900,"results":"168","hashOfConfig":"139"},{"size":4282,"mtime":1614164514455,"results":"169","hashOfConfig":"139"},{"size":2850,"mtime":1613807409480,"results":"170","hashOfConfig":"139"},{"size":187,"mtime":1613813559624,"results":"171","hashOfConfig":"139"},{"size":8153,"mtime":1613812116586,"results":"172","hashOfConfig":"139"},{"size":8839,"mtime":1614240370502,"results":"173","hashOfConfig":"139"},{"size":1809,"mtime":1613912068867,"results":"174","hashOfConfig":"139"},{"size":1922,"mtime":1613915451896,"results":"175","hashOfConfig":"139"},{"size":5985,"mtime":1613924827992,"results":"176","hashOfConfig":"139"},{"size":1296,"mtime":1613916044231,"results":"177","hashOfConfig":"139"},{"size":2068,"mtime":1613924352739,"results":"178","hashOfConfig":"139"},{"size":4187,"mtime":1614161341426,"results":"179","hashOfConfig":"139"},{"size":1411,"mtime":1613925654318,"results":"180","hashOfConfig":"139"},{"size":2981,"mtime":1614236370244,"results":"181","hashOfConfig":"139"},{"size":378,"mtime":1614173642203,"results":"182","hashOfConfig":"139"},{"size":1823,"mtime":1614235642918,"results":"183","hashOfConfig":"139"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hve59r",{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},"zvo2a7",{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"189"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"189"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"189"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"189"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"189"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"189"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"189"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"189"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"189"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"189"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"189"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"189"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"189"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"189"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"189"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"189"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"189"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"189"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"189"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"189"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"189"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"189"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"189"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"303"},"19jbvue",{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"303"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"303"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"303"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"303"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"303"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"303"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"303"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"303"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"303"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"303"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"303"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"303"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"303"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"303"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"303"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"303"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"303"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"303"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"303"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"303"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"303"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"370"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"370"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"370"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"370"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"370"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"370"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"370"},"C:\\My_Project\\my-app\\src\\reportWebVitals.js",[],"C:\\My_Project\\my-app\\src\\index.js",["408"],"\nimport store from './redux/redux-store';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\n\n//addPost('SAMURAIJS.COM');\n\n//  let rerenderEntireTree= (state)=> {\n    ReactDOM.render(\n        <BrowserRouter>\n        <Provider store={store}>\n        <App />\n        </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\n// }\n// rerenderEntireTree(store.getState()); -убрали с использованием ract-redux\n// store.subscribe(()=> {\n//     let state=store.getState();\n//     rerenderEntireTree(state);\n// });\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["409","410"],"C:\\My_Project\\my-app\\src\\redux\\profile-reducer.js",["411","412","413","414","415"],"import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, post: 'Hello, I try to be better', likesCount: 12 },\r\n        { id: 2, post: 'Hello, its my second post', likesCount: 69 },\r\n        { id: 3, post: 'ZZzzzZZZZ', likesCount: 241 },\r\n        { id: 4, post: 'Yo!Yo!YO!', likesCount: 245 },\r\n        { id: 5, post: 'HEYYYY MAN', likesCount: 364 }],\r\n    // newPostText: ' ', //Упразднено, редакс формы\r\n    profile: null,\r\n    status: ' '\r\n};\r\n\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                // post: state.newPostText,\r\n                post: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n            // stateCopy.posts=[...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n        }\r\n        // // case UPDATE_NEW_POST_TEXT: {\r\n        // //     return {\r\n        // //         ...state,\r\n        // //         newPostText: action.newText\r\n        // //     }; -упразднено редакс формы\r\n        //     // stateCopy.newPostText = action.newText;\r\n        //     // return stateCopy;\r\n        // }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        };\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postID)\r\n            }\r\n        };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\n// export const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postID) => ({ type: DELETE_POST, postID })\r\n\r\nexport const getUserProfile = (userID) => async (dispatch) => {  //Thunk creator -создаем санку\r\n    const response = await usersAPI.getProfile(userID)\r\n    //    .then(response => {\r\n    dispatch(setUserProfile(response.data)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n\r\n}\r\n\r\nexport const getStatus = (userID) => async (dispatch) => {  //Thunk creator -создаем санку\r\n    let response = await profileAPI.getStatus(userID);\r\n    // .then(response => {\r\n    dispatch(setStatus(response.data)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n    // });\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {  //Thunk creator -создаем санку\r\n    let response = await profileAPI.updateStatus(status)\r\n    // .then(response => {\r\n    if (response.data.resultCode === 0) { //Если в ответе на запрос пришел резалтКод=0, то ошибки нет,статус сменился, сетаем статус\r\n        dispatch(setStatus(status)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n    }\r\n    // });\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","C:\\My_Project\\my-app\\src\\redux\\redux-store.js",[],"C:\\My_Project\\my-app\\src\\redux\\user-reducer.js",["416"],"import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../components/utilites/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,   //В UsersContainer в State передаем\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n                    return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                \r\n                //users:[...state.users],\r\n                // users: state.users.map(u => {                 // 6) Чтоб скопировать массив глубинно и значения массива изменялись, нужно добавить map();\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n\r\n                // })\r\n            }\r\n           \r\n        case UNFOLLOW:\r\n            \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                // users:[...state.users],\r\n                // users: state.users.map(u => {                 // 6) Чтоб скопировать массив глубинно и значения массива изменялись, нужно добавить map();\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n\r\n                // })\r\n            }\r\n            \r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }  // 8) Берем пользователей из Action и подсовываем в state, перезатираем пользователей\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }  // 15) Отображение стр.пагинации пользователей\r\n\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }  // 16) Отображение пользователей\r\n\r\n        }\r\n\r\n        case TOOGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }  // 17) Отображение preloader\r\n\r\n        }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n\r\n                //Фильтруем массив пропускаем только ту ID которая не равна той ID которая пришла в action    \r\n                // Если у нас isFetching=true то в массив добавляем новую ID-шку                   \r\n            }      // Если у нас isFetching=false то создвем новый массив   \r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })       // 1) Создаем компоненту JSX 2)Добавляем в APP.js ее (USERS) 3) Создаем REDUCERS для USERS 4) Добавляем ActionCreators-слушателей на кнопки и т.д\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })   // 5) Создаем копию STATE,чтоб не копировать целиком объект (это не правильно, имьютабельность нарушится)\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })        // 7) Берем юзеров списком из сервака, установим их в State\r\n\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, currentPage: page })\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching })\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));  //Я бизнес уровень,я активирую крутилку (загрузка, ожидание)\r\n        dispatch(setCurrentPage(page)); //Диспатчим текущую страницу\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        // .then(data => {\r\n\r\n        dispatch(toggleIsFetching(false));  //Я бизнес уровень,ответ с сервера пришел, крутилку выключаем\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        // });\r\n\r\n    }\r\n\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => { //Рефакторинг.Общий метод.Универсальная функция для follow unfollow\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n//Создаем вторую санку, для follow\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","C:\\My_Project\\my-app\\src\\redux\\auth-reducer.js",[],"C:\\My_Project\\my-app\\src\\App.js",["417"],"import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter, withRouter } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport Video from './components/Video/Video';\nimport Security from './components/Security/Security';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport About_us from './components/About_us/About_us';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { withSuspence } from './components/hok/withSuspence';\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); // Импорт компоненты с помощью lazy компонент\n\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); // Импорт компоненты с помощью lazy компонент\n\nclass App extends Component {\n  componentDidMount () {\n        this.props.initializeApp();\n    }\n  render() {\n    // Если не проиницилизировались, верни нам прелоадер -загрузки экран\n    if (!this.props.initialized) { \n    return <Preloader/>\n    }\n     return (\n             <div className= 'app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        \n        <div className='app-wrapper-content'>\n          <Route path='/dialogs' \n          render={withSuspence(DialogsContainer)}/>\n          \n          <Route path='/profile/:userID?'render={()=> {\n                return <Suspense fallback={<div>Loading...</div>}> \n                {/* Пока компонента загружается,видим Loading */}\n          <ProfileContainer  />\n          </Suspense>\n          }}/>     \n          {/* :UserId-Добавляем путь к пользователю в ссылку. ?-означает,что параметр может отсутствовать */}\n          <Route path='/login'render={()=><Login  />}/>    \n          <Route path='/users'render={()=><UsersContainer />}/>\n          <Route path='/music' component={Music}/>\n          <Route path='/video' component={Video}/>\n          <Route path='/news' component={News}/>\n          <Route path='/settings' component={Settings}/>\n          <Route path='/security' component={Security}/>\n          <Route path='/about_us' component={About_us}/>\n        </div>\n                      \n        </div>  \n    \n         );\n  }\n}\nconst mapStateToProps=(state)=> ({\n  initialized:state.app.initialized //Обращение к BLL проинициализированы мы или нет, добавили в список редьюсеров используемый, закомбайнили редьюсер app\n})\n\nexport default compose (\n  withRouter,\n  connect (mapStateToProps, {initializeApp})) (App);\n","C:\\My_Project\\my-app\\src\\components\\Video\\Video.jsx",["418"],"import React from 'react';\r\nimport s from './/.//Video.module.css';\r\nconst Video= (props) => {\r\n  return (\r\n   <div>\r\n       Video\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default Video;","C:\\My_Project\\my-app\\src\\components\\Security\\Security.jsx",["419"],"import React from 'react';\r\nimport s from './/.//Security.module.css';\r\nconst Security= (props) => {\r\n  return (\r\n   <div>\r\n       Security\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default Security;","C:\\My_Project\\my-app\\src\\components\\Settings\\Settings.jsx",["420"],"import React from 'react';\r\nimport s from './/.//Settings.module.css';\r\nconst Settings= (props) => {\r\n  return (\r\n   <div>\r\n       Settings\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default Settings;","C:\\My_Project\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["421","422"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport { withAuthRedirect } from '../hok/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n// const DialogsContainer = () => {\r\n//   let newPostMessage = React.createRef();  /* Создали пустую ссылку, в дальнейшем на нее будет ссылаться реакт при создании и написании сообщения.Далее привяжем ссылку к текст Area */\r\n//   let addmessage = () => {\r\n//     let text = newPostMessage.current.value;\r\n//     alert(text);\r\n//   }\r\n  \r\n//   /*\r\n//   let dialogs = [\r\n//       {id:1, name:'Димасик'},\r\n//       {id:2, name:'Евген'},\r\n//       {id:3, name:'Искандер'},\r\n//       {id:4, name:'Дон Дьябло'},\r\n//       {id:5, name:'Андрей'}\r\n//   ]\r\n  \r\n  \r\n//   let messages = [\r\n//     {id:1, message:'Привет!)'},\r\n//     {id:2, message:'Как твои дела?'},\r\n//     {id:3, message:'У тебя все получится!'},\r\n//     {id:4, message:'Yo!Yo!YO!'},\r\n//     {id:5, message:'HEYYYY MAN'},\r\n//     {id:6, message:'Do you know? Enrique)'}\r\n//   ]\r\n//   */\r\n//   // let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n\r\n\r\n//   // let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n\r\n//   // let newMessageBody = state.newMessageBody;                                  //МАПИМ,ДОСТАЕМ ИЗ ПРОПСОВ СООБЩЕНИЯ (ИЗ БИЗНЕС BLL УРОВНЯ ДОСТАЕМ)\r\n \r\n//   return <StoreContext.Consumer>  \r\n//     { store => {\r\n//       // let state = store.getState().dialogsPage;\r\n//       let onSendMessageClick = () => {\r\n//        store.dispatch(sendMessageCreator());\r\n//       }\r\n//       let onNewMessageChange = (body) => {\r\n//         // let body=e.target.value;\r\n//         store.dispatch(updateNewMessageBodyCreator(body));                     //Благодаря Диспатчу меняется уровень бизнеса BLL уровень\r\n//       }\r\n    \r\n//       return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//         sendMessage={onSendMessageClick}\r\n//         dialogsPage={store.getState().dialogsPage} />\r\n//     }\r\n//   }\r\n//   </StoreContext.Consumer>\r\n// }\r\nlet mapStateToProps=(state)=> {                            //Фун-ция Connect из React-Redux библиотеки забирает State и передает сначала в КОНТЕЙНЕРНУЮ компоненту потом в презентационную компоненту\r\nreturn {\r\n   dialogsPage: state.dialogsPage,\r\n  //  isAuth:state.auth.isAuth   //берем информацию из стэйта (redux-store) (редьюсеры) залогинены мы или нет, если нет,сообщения прячем\r\n}\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=> {                                  //Фун-ция Connect из React-Redux библиотеки забирает колбэки-функции и передает сначала в КОНТЕЙНЕРНУЮ компоненту потом в презентационную компоненту\r\n  return {\r\n    sendMessage: (newMessageBody)=> {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }   \r\n    // updateNewMessageBody:(body)=> {\r\n    //   dispatch(updateNewMessageBodyCreator(body));   //не будем апдэйдить на каждый клик, используем форму редакса \r\n    // }\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent=withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer= connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);   //По этим правилам законнекть презентационную компоненту к Store через Контейнерную компоненту\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n// DialogsContainer;","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileContainer.jsx",["423"],"import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../hok/withAuthRedirect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n componentDidMount () {\r\n  let userID=this.props.match.params.userID;\r\n  if (!userID) {\r\n    userID=this.props.authorizedUserID;\r\n    if(!userID) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n  this.props.getUserProfile(userID);\r\n  this.props.getStatus(userID);\r\n}\r\n\r\n\r\n\r\n render () {\r\n   \r\n\r\n    return (\r\n      <Profile {...this.props}\r\n      profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateStatus={this.props.updateStatus}/>\r\n                 \r\n    )     \r\n    \r\n}\r\n}\r\nlet mapStateToProps =(state) => ({\r\n  profile:state.profilePage.profile,\r\n  status:state.profilePage.status,\r\n  authorizedUserID: state.auth.userId, //state-BLL уровень, auth-ветка там, где мы комбайним редьюсеры, userId-ID пользователя\r\n  isAuth:state.auth.isAuth\r\n });\r\nexport default compose (\r\n     connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n     withRouter,\r\n    //withAuthRedirect\r\n    )(ProfileContainer);\r\n      \r\n// let AuthRedirectComponent= withAuthRedirect(ProfileContainer);\r\n\r\n// let WithURLDataContainerComponent= withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps,{getUserProfile}) (WithURLDataContainerComponent);\r\n","C:\\My_Project\\my-app\\src\\components\\Login\\Login.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Dialogs\\Dialogs.jsx",["424","425","426"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../Common/FormControl/FormsControls';\r\nimport { maxLengthCreator, required } from '../validators/validators';\r\nimport s from './/.//Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let newPostMessage = React.createRef();  /* Создали пустую ссылку, в дальнейшем на нее будет ссылаться реакт при создании и написании сообщения.Далее привяжем ссылку к текст Area */\r\n  let addmessage = () => {\r\n    let text = newPostMessage.current.value;\r\n    alert(text);\r\n  }\r\n  //  let state=props.store.getState().dialogsPage;\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  /*\r\n  let dialogs = [\r\n      {id:1, name:'Димасик'},\r\n      {id:2, name:'Евген'},\r\n      {id:3, name:'Искандер'},\r\n      {id:4, name:'Дон Дьябло'},\r\n      {id:5, name:'Андрей'}\r\n  ]\r\n  \r\n  \r\n  let messages = [\r\n    {id:1, message:'Привет!)'},\r\n    {id:2, message:'Как твои дела?'},\r\n    {id:3, message:'У тебя все получится!'},\r\n    {id:4, message:'Yo!Yo!YO!'},\r\n    {id:5, message:'HEYYYY MAN'},\r\n    {id:6, message:'Do you know? Enrique)'}\r\n  ]\r\n  */\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n  let newMessageBody = state.newMessageBody;                                  //МАПИМ,ДОСТАЕМ ИЗ ПРОПСОВ СООБЩЕНИЯ (ИЗ БИЗНЕС BLL УРОВНЯ ДОСТАЕМ)\r\n  // let onSendMessageClick = () => {\r\n  //   props.sendMessage();\r\n  //   // props.store.dispatch(sendMessageCreator());\r\n  // } //Заменили на addNewMessage\r\n  \r\n  // let onNewMessageChange = (e) => {\r\n  //   let body = e.target.value;\r\n  //   props.updateNewMessageBody(body);\r\n  //   // props.store.dispatch(updateNewMessageBodyCreator(body));                     //Благодаря Диспатчу меняется уровень бизнеса BLL уровень\r\n  // } //Обработчик события нам не нужен, так как стали использовать редакс форму\r\n\r\n  let addNewMessage = (values) => {\r\n    alert(values.newMessageBody);\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  \r\n  if (props.isAuth == false) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n        {/* <DialogItem name={dialogs[0].name} id={dialogs[0].id}/>\r\n         <DialogItem name={dialogs[1].name} id={dialogs[1].id}/>*/}\r\n\r\n      </div>\r\n\r\n      <div className={s.messages}>\r\n        {/* <Message message={messagesData[0].message} id={messagesData[0].id}/> \r\n         <Message message={messagesData[1].message} id={messagesData[1].id }> */}\r\n        <div>{messagesElements}</div>\r\n        </div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst maxLength50=maxLengthCreator(50);\r\n\r\nconst AddMessageForm=(props)=> {\r\nreturn (\r\n<form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={TextArea} \r\n            validate={[required, maxLength50]}\r\n            name=\"newMessageBody\" placeholder=\"Напишите сообщение\" />\r\n            {/* <textarea value={newMessageBody} onChange={onNewMessageChange} placeholder='Напишите сообщение' ></textarea>  //Вызывает функцию onNewMessageChange по изменению текста */}\r\n            </div> \r\n          {/* <div><button onClick={onSendMessageClick}>Отправить</button></div> */}\r\n          <div><button>Отправить</button></div>\r\n        </form>\r\n)\r\n}\r\nconst AddMessageFormRedux=reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\nexport default Dialogs;","C:\\My_Project\\my-app\\src\\components\\Header\\Header.jsx",["427"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './/.//Header.module.css';\r\nimport Logo from '../../Pirojkov.png'\r\n\r\nconst Header = (props) => {\r\n       return <header className='header'>\r\n        <img className='logo' src={Logo}/>\r\n\r\n    <div className={s.LoginBlock}>\r\n        {props.isAuth? \r\n        <div> {props.login}-<button onClick={props.logout}>Log out</button> </div>\r\n  : <NavLink to={'/login'}>Login</NavLink>}\r\n    </div>\r\n\r\n     </header>\r\n\r\n}\r\nexport default Header;","C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["428","429","430","431","432"],"import React, { Component, PureComponent } from 'react';\r\nimport s from '..//MyPosts/MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../validators/validators';\r\nimport { TextArea } from '../../Common/FormControl/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <Field name=\"newPostText\" component={TextArea}\r\n      validate={[required, maxLength10]} />\r\n    {/* <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /> */}\r\n    {/* <div><button onClick={onAddPost}>Добавить пост</button> */}\r\n    <div><button>Добавить пост</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts= React.memo(props=> {\r\n\r\n\r\n// shouldComponentUpdate (nextProps, nextState) { // true false, если пропсы пришли другие то возвращаем true и отрисовываем компоненту нужно обновить ее\r\n// return nextProps !=this.props || nextState !=this.state;\r\n// }  этот метод жизненного цикла можно заменить наследованием PureComponent чистой компонентой от реакта\r\n\r\n  let newPostElement = React.createRef();  /* Создали пустую ссылку, в дальнейшем на нее будет ссылаться реакт при создании и написании поста.Далее привяжем ссылку к текст Area */\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n    // props.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value;\r\n  //   props.updateNewPostText(text);\r\n  //   //  let action ={type:'UPDATE-NEW-POST-TEXT', newText:text};\r\n  //   // let action=updateNewPostTextActionCreator(text);\r\n  //   //    props.dispatch(action);\r\n  // } //Упразднено т.к используем форму редакс\r\n\r\n  /*\r\n  let posts=[\r\n    {id:1, post:'Hello, I try to be better', likesCount:12},\r\n    {id:2, post:'Hello, its my second post', likesCount:69},\r\n    {id:3, post:'ZZzzzZZZZ',likesCount:241},\r\n    {id:4, post:'Yo!Yo!YO!',likesCount:245},\r\n    {id:5, post:'HEYYYY MAN',likesCount:364}\r\n  ]\r\n  */\r\n\r\n  let postsElements =\r\n    props.posts.map(p => <Post message={p.post} likesCount={p.likesCount} />);\r\n\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>Мои записи</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      {/* //Когда сасабмитиится форма вызовем колбэк и мы получим все данные из формы  */}\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["433"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n  \r\n\r\n  state = {\r\n    editMode: false,\r\n    status:this.props.status\r\n      }\r\n\r\nactivateEditMode (){\r\n  this.setState({\r\n    editMode:true,\r\n  })\r\n\r\n}\r\ndeactivateEditMode (){\r\n  this.setState({\r\n    editMode:false,\r\n    \r\n  });\r\n  this.props.updateStatus(this.state.status);\r\n  }\r\n  onStatusChange=(e) => {\r\n    this.setState({\r\n      status:e.currentTarget.value\r\n    }); \r\n    \r\n  }\r\n\r\ncomponentDidUpdate (prevProps, prevState) {\r\n  if(prevProps.status !==this.props.status) {\r\n    this.setState({\r\n      status:this.props.status\r\n    });\r\n  }\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n          <div>\r\n            <span onDoubleClick={ this.activateEditMode.bind(this) }> {this.props.status || \"-----\"}</span>\r\n          </div>\r\n        }\r\n        {this.state.editMode &&\r\n          <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status} />\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","C:\\My_Project\\my-app\\src\\redux\\dialogs-reducer.js",[],"C:\\My_Project\\my-app\\src\\components\\News\\News.jsx",["434"],"import React from 'react';\r\nimport s from './/.//News.module.css';\r\nconst News= (props) => {\r\n  return (\r\n   <div>\r\n       News\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default News;","C:\\My_Project\\my-app\\src\\components\\Common\\Preloader\\Preloader.js",["435"],"import React from 'react';\r\nimport Ajux_loader from '../../../assets/images/Ajux_loader.gif'\r\n\r\n\r\nlet Preloader=(props)=> {\r\nreturn <div>\r\n    <img src={Ajux_loader} style={{backgroundColor:''}}/>\r\n</div>\r\n}\r\n\r\n\r\nexport default Preloader;\r\n","C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["436","437"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\n\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//   // let state=props.store.getState();\r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {\r\n//         store => {\r\n//           let state = store.getState();\r\n//           let addPost = () => {\r\n//             store.dispatch(addPostActionCreator());\r\n//           }\r\n//           let onPostChange = (text) => {\r\n\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             store.dispatch(action);\r\n//           }\r\n//           return <MyPosts updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText} />\r\n//         }\r\n//       }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n\r\n// }\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   let action = updateNewPostTextActionCreator(text);\r\n    //   dispatch(action);\r\n    // },упразднен с использованием форм редакса\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\nexport default MyPostsContainer;\r\n","C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["438","439"],"import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n    return (\r\n    <div className={s.descriptionBlock}>\r\n       <img src={props.profile.photos.large}/>\r\n      INFORMATION+AVA+DESCRIPTION\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n    </div>  \r\n    )\r\n       \r\n}\r\nexport default ProfileInfo;\r\n","C:\\My_Project\\my-app\\src\\serviceWorker.js",[],"C:\\My_Project\\my-app\\src\\components\\Users\\Users.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Profile\\MyPosts\\Posts\\Post.jsx",["440"],"import React from 'react';\r\nimport s from '..//Posts/Post.module.css';\r\nimport avaPost from '..//../../../assets/images/bat.png'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n          <div className={s.item}>\r\n          <img className='logo' src={avaPost}/>\r\n            {props.message}\r\n          \r\n          <div>\r\n            <span>like</span> {props.likesCount}\r\n          </div>\r\n          </div>\r\n          \r\n         )\r\n}\r\nexport default Post;\r\n","C:\\My_Project\\my-app\\src\\components\\About_us\\About_us.jsx",["441"],"import React from 'react';\r\nimport s from './/.//About_us.module.css';\r\nconst About_us= (props) => {\r\n  return (\r\n   <div>\r\n       About_us\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default About_us;","C:\\My_Project\\my-app\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\My_Project\\my-app\\src\\api\\api.js",[],"C:\\My_Project\\my-app\\src\\components\\Profile\\Profile.jsx",["442","443","444"],"import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport GORA from '../..//assets/images/GORA.png';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n    <div>\r\n    <div>\r\n     <img className='' src={GORA}/>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n      \r\n    </div>    \r\n    </div> \r\n    )     \r\n    \r\n}\r\nexport default Profile;\r\n","C:\\My_Project\\my-app\\src\\components\\hok\\withAuthRedirect.js",[],"C:\\My_Project\\my-app\\src\\components\\Music\\Music.jsx",["445"],"import React from 'react';\r\nimport s from './/.//Music.module.css';\r\nconst Music= (props) => {\r\n  return (\r\n   <div>\r\n       Music!!!!!\r\n   </div>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\nexport default Music;","C:\\My_Project\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Common\\FormControl\\FormsControls.js",[],"C:\\My_Project\\my-app\\src\\components\\validators\\validators.js",[],"C:\\My_Project\\my-app\\src\\redux\\sidebar-reducer.js",[],"C:\\My_Project\\my-app\\src\\components\\Users\\UsersContainer.jsx",["446","447","448","449","450","451"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, requestUsers } from '../../redux/user-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../hok/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {getPageSize,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress, getUsers} from '../../redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {           //extends React.Component-благодаря этой записи Реакт за кадром напишет new User и создаст нового пользователя.При этом constructor(props), super(props) можно не писать, делегирование и прокдывание пропсов произойдет за кадром в реакт\r\n\r\n    componentDidMount() {\r\n                 this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n            }\r\n\r\n  onPageChanged=(pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n      }\r\n    render() {\r\n       \r\n\r\n        return <>\r\n        {this.props.isFetching ? \r\n        <Preloader/>: null}\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        // toggleFollowingProgress={this.props.toggleFollowingProgress}  \r\n        followingInProgress={this.props.followingInProgress}  \r\n        />\r\n        </>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//Используем для создания селектора\r\n// let mapStateToProps = (state) =>{                // mapStateToProps-функция- принимает весь глобальный стэйт целиком и возвращает объект с данными который нам нужен в данной, контейнерной компоненте\r\n// return {\r\n//     users:state.usersPage.users,                // Компонента получает USERS, то есть в презентационной (чистой) компоненте будет users   \r\n//     pageSize:state.usersPage.pageSize,\r\n//     totalUsersCount:state.usersPage.totalUsersCount,  \r\n//     currentPage:state.usersPage.currentPage,\r\n//     isFetching:state.usersPage.isFetching,\r\n//     followingInProgress:state.usersPage.followingInProgress  \r\n// }\r\nlet mapStateToProps = (state) =>{                // mapStateToProps-функция- принимает весь глобальный стэйт целиком и возвращает объект с данными который нам нужен в данной, контейнерной компоненте\r\n  return {\r\n      users:getUsers(state),\r\n      // users:getUsersSelector(state),                // Компонента получает USERS, то есть в презентационной (чистой) компоненте будет users   \r\n      pageSize:getPageSize(state),\r\n      totalUsersCount:getTotalUsersCount(state), \r\n      currentPage:getCurrentPage(state),\r\n      isFetching:getIsFetching(state),\r\n      followingInProgress:getFollowingInProgress(state)\r\n  }\r\n\r\n\r\n}\r\n// let mapDispatchToProps =(dispatch)=> {                 // Компонента получает callback-и которые может вызвать\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));            // Диспатчим, передаем результат работы ActionCratora-\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));            // Диспатчим, передаем результат работы ActionCratora-\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber)=> {\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotalUsersCount: (totalCount)=> {\r\n//             dispatch(setTotalUsersCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching)=> {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n        \r\n//     }\r\n\r\n// }\r\n\r\n// let withRedirect=withAuthRedirect(UsersContainer)\r\n// export default connect (mapStateToProps, \r\n// {follow, unfollow,setCurrentPage,toggleFollowingProgress, getUsers}) (withRedirect);      // Путь до функциональной (или классовой) компоненты к которой хотим достучаться. App.js->UserContainer->UsersC\r\n\r\nexport default compose(\r\n  // withAuthRedirect,\r\n  connect (mapStateToProps,{follow, unfollow,setCurrentPage,toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","C:\\My_Project\\my-app\\src\\redux\\app-reducer.js",["452","453"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\n\r\nlet initialState= {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n             return {\r\n             ...state, \r\n             initialized: true //Стэйт копируем для того,что если будет еще экшен не перезатер наше состояние state\r\n         }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const inintializedSuccess= () => ({ type: INITIALIZED_SUCCESS }) //Задиспатчик экшен криэйтор\r\n\r\nexport const initializeApp=()=>(dispatch)=>{  //Создаем САНКУ санк криэйтор для инициализации\r\n         let promise= dispatch(getAuthUserData());  //Диспатч не только передает вызов фкункции но и возвращает результат выполнения функции return \r\n         //dispatch(somethingElse());\r\n         //dispatch(somethingElse());\r\n            Promise.all([promise])\r\n            .then(()=>{\r\n             dispatch(inintializedSuccess());\r\n         });        \r\n}       \r\n\r\n\r\nexport default appReducer;","C:\\My_Project\\my-app\\src\\redux\\users-selectors.js",[],"C:\\My_Project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks..jsx",["454"],"import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  // let stateWithSetState=useState(false);\r\n  // let editMode=stateWithSetState[0];\r\n  // let setEditMode= stateWithSetState[1];\r\n  let [editMode,setEditMode]=useState(false); //Деструктуризация массива (локальный стэйт,изменятся ли статус?)\r\n  let [status,setStatus]=useState(props.status); //Деструктуризация массива (локальный стэйт,что в статусе печатают, как изменяется?)\r\n\r\n  useEffect ( ()=>{         //Используем хук useEffect для синхронизации статуса,перерисует статус при его изменении\r\n    setStatus(props.status);  \r\n  }, [props.status]); //Синхронизируйся, когда изменится статус[props.status]\r\n\r\n  const activateEditMode=() =>{\r\n    setEditMode(true);\r\n  }\r\n  \r\n  const deactivateEditMode=() =>{\r\n    setEditMode(false);\r\n    props.updateStatus(status);//должны отправлять наверх родителю в стэйт инфу о статусе\r\n  }\r\n  const onStatusChange=(e) => {\r\n    setStatus(e.currentTarget.value); \r\n      }\r\n\r\n    return (\r\n  <div>\r\n    { !editMode &&\r\n      <div>\r\n        <span onDoubleClick={activateEditMode} > {props.status || \"-----\"}</span>\r\n      </div>\r\n    }\r\n    {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n      </div>\r\n    }\r\n  </div>\r\n)\r\n  }\r\nexport default ProfileStatusWithHooks;\r\n","C:\\My_Project\\my-app\\src\\components\\utilites\\object-helpers.js",[],"C:\\My_Project\\my-app\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"C:\\My_Project\\my-app\\src\\components\\Users\\User.jsx",["455"],"import React from 'react';\r\nimport userPhoto from '../../assets/images/User.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) => {\r\n       return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed \r\n                            ? <button disabled={followingInProgress\r\n                                .some( id=>id===user.id)} \r\n                                onClick={() => {unfollow(user.id)}}> \r\n                                Unfollow</button>       // /* // В пропсах обращаемся к follow props.follow(u.id), так как в UserContainer в mapDispatchToProps у нас есть такая функция, принимает пользовательский id - */                                 \r\n                        : <button disabled={followingInProgress.some(id=>id===user.id)} \r\n                            onClick={() => {follow(user.id) }}>  \r\n                            {/* //Если хотябы кто кто нибудь из этого массива some равен (true) id пользователя то метод some вернет true */}\r\n                                                                  \r\n                            Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n\r\n            </div>)\r\n        }\r\n\r\nexport default User;","C:\\My_Project\\my-app\\src\\components\\hok\\withSuspence.js",["456","457"],"import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const withSuspence=(Component)=> {\r\n\r\n  return (props)=> {\r\n  return  <Suspense fallback={<div>Loading...</div>}> \r\n  <Component {...props}/>\r\n  </Suspense>\r\n  };\r\n} ","C:\\SPA_socialNetwork\\my-app\\src\\index.js",["458"],["459","460"],"C:\\SPA_socialNetwork\\my-app\\src\\App.js",["461","462"],"import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter, withRouter, Switch, Redirect } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport Video from './components/Video/Video';\nimport Security from './components/Security/Security';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport About_us from './components/About_us/About_us';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { withSuspence } from './components/hok/withSuspence';\n\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); // Импорт компоненты с помощью lazy компонент\n\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); // Импорт компоненты с помощью lazy компонент\n\nclass App extends Component {\n  catchAllUnhandleError=(promiseRejectionEvent)=>{\n  //  alert('Some error occured');\n  }\n  componentDidMount () {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\",this.catchAllUnhandleError);// Функция глобальная для отлова ошибок rejection в промисах\n        }\n    componentWillUnmount () {\n      window.addEventListener(\"unhandledrejection\",this.catchAllUnhandleError);// Демонтируем функцию обращения к глобальному объекту,подчищаем за собой мусор,когда компонента умрет, должен умереть и мусор\n    }    \n  render() {\n    // // Если не проиницилизировались, верни нам прелоадер -загрузки экран\n    // if (!this.props.initialized) { \n    // return <Preloader/>\n    // }\n     return (\n             <div className= 'app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        \n        <div className='app-wrapper-content'>\n          <Switch>\n          <Route exact path='/' render={()=><Redirect to={\"/profile\"}/>}/>\n          <Route exact path='/SPA_socialNetwork' render={()=><Redirect to={\"/profile\"}/>}/>        \n          <Route path='/dialogs' \n          render={withSuspence(DialogsContainer)}/>\n          \n          <Route path='/profile/:userID?'render={()=> {\n                return <Suspense fallback={<div>Loading...</div>}> \n                {/* Пока компонента загружается,видим Loading */}\n          <ProfileContainer  />\n          </Suspense>\n          }}/>     \n          {/* :UserId-Добавляем путь к пользователю в ссылку. ?-означает,что параметр может отсутствовать */}\n          <Route path='/login'render={()=><Login  />}/>    \n          <Route path='/users'render={()=><UsersContainer pageTitle={'Страница пользователей'}/>}/>\n          <Route path='/music' component={Music}/>\n          <Route path='/video' component={Video}/>\n          <Route path='/news' component={News}/>\n          <Route path='/settings' component={Settings}/>\n          <Route path='/security' component={Security}/>\n          <Route path='/about_us' component={About_us}/>\n          <Route path='*' render={()=><div>404 Not Found Page,Sorry;)</div>}/>\n          </Switch>\n        </div>\n                      \n        </div>  \n    \n         );\n  }\n}\nconst mapStateToProps=(state)=> ({\n  initialized:state.app.initialized //Обращение к BLL проинициализированы мы или нет, добавили в список редьюсеров используемый, закомбайнили редьюсер app\n})\n\nexport default compose (\n  withRouter,\n  connect (mapStateToProps, {initializeApp})) (App);\n","C:\\SPA_socialNetwork\\my-app\\src\\serviceWorker.js",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\hok\\withSuspence.js",["463","464"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\Preloader\\Preloader.js",["465"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Music\\Music.jsx",["466"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Video\\Video.jsx",["467"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Security\\Security.jsx",["468"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\News\\News.jsx",["469"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Settings\\Settings.jsx",["470"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\About_us\\About_us.jsx",["471"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["472","473"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileContainer.jsx",["474","475"],"import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto,saveProfile} from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../hok/withAuthRedirect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\nrefreshProfile () {\r\n  let userID=this.props.match.params.userID;\r\n  if (!userID) {\r\n    userID=this.props.authorizedUserID;\r\n    if(!userID) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n  this.props.getUserProfile(userID);\r\n  this.props.getStatus(userID);\r\n}\r\n\r\n componentDidMount () {\r\n  this.refreshProfile ();\r\n}\r\ncomponentDidUpdate(prevProps,prevState,snapshot) {\r\n  if (this.props.match.params.userID !=prevProps.match.params.userID ) { //Сравнение мы будем обновлять компоненту только когда текущие рпопсы номер пользователя отличаются от предыдущих (тогда есть изменение надо переррисовать)\r\n  this.refreshProfile ();  //Иначе цикл будет бесконечным ComponentDidMount перерисует потом дтдапдеэйт и цикл будет вечным\r\n}\r\n}\r\n\r\n\r\n\r\n render () {\r\n   \r\n\r\n    return (\r\n      <Profile {...this.props}\r\n      IsOwner={! this.props.match.params.userID} //Я владелец страницы?Двойное отрицание псевдоложь, если я владелец этой страницы id-нет, то мне будет показана аватарка загрузка профиля\r\n      profile={this.props.profile} \r\n      status={this.props.status}\r\n      savePhoto= {this.props.savePhoto} //2 этап. прокинули функцию добавления фото с UI уровня с  ProfileInfo\r\n      updateStatus={this.props.updateStatus}/>\r\n                 \r\n    )     \r\n    \r\n}\r\n}\r\nlet mapStateToProps =(state) => ({\r\n  profile:state.profilePage.profile,\r\n  status:state.profilePage.status,\r\n  authorizedUserID: state.auth.userId, //state-BLL уровень, auth-ветка там, где мы комбайним редьюсеры, userId-ID пользователя\r\n  isAuth:state.auth.isAuth\r\n });\r\nexport default compose (\r\n     connect(mapStateToProps,{getUserProfile, getStatus, updateStatus,savePhoto,saveProfile}),  //3 Добавили санку санк криэйтор чтоб в пропсах пришло добавление фото, идем в профайл редьюсер\r\n     withRouter,\r\n    //withAuthRedirect\r\n    )(ProfileContainer);\r\n      \r\n// let AuthRedirectComponent= withAuthRedirect(ProfileContainer);\r\n\r\n// let WithURLDataContainerComponent= withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps,{getUserProfile}) (WithURLDataContainerComponent);\r\n//saveProfile -добавляем в мап диспатч ту пропсу для прокидывания пропса сохранения профиля в бизнес уровень\r\n// saveProfile добавляем санк креэйтор в профайл редьюсер","C:\\SPA_socialNetwork\\my-app\\src\\components\\utilites\\object-helpers.js",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\hok\\withAuthRedirect.js",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Header\\Header.jsx",["476"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\Dialogs.jsx",["477","478","479"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\Profile.jsx",["480","481","482","483"],"import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport GORA from '../..//assets/images/GORA.png';\r\nimport { saveProfile } from '../../redux/profile-reducer';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n    <div>\r\n    <div>\r\n     <img className='' src={GORA}/>\r\n      <ProfileInfo savePhoto={props.savePhoto} IsOwner={props.IsOwner} \r\n      profile={props.profile} status={props.status} \r\n      updateStatus={props.updateStatus}\r\n      saveProfile={props.saveProfile}/> \r\n      {/* saveProfile Прокидываем по иерархии в уровень BLL  добавляем в профайл контейнерную компоненнту */}\r\n      {/* connect(mapStateToProps,{...saveProfile}) */}\r\n      <MyPostsContainer />\r\n      \r\n    </div>    \r\n    </div> \r\n    )     \r\n    \r\n}\r\nexport default Profile;\r\n","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["484","485"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\User.jsx",["486"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["487","488","489","490","491"],"import React, { Component, PureComponent } from 'react';\r\nimport s from '..//MyPosts/MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../validators/validators';\r\nimport { TextArea } from '../../Common/FormControl/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <Field name=\"newPostText\" component={TextArea}\r\n      validate={[required, maxLength10]} />\r\n    {/* <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /> */}\r\n    {/* <div><button onClick={onAddPost}>Добавить пост</button> */}\r\n    <div><button>Добавить пост</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts= React.memo(props=> {\r\n\r\n\r\n// shouldComponentUpdate (nextProps, nextState) { // true false, если пропсы пришли другие то возвращаем true и отрисовываем компоненту нужно обновить ее\r\n// return nextProps !=this.props || nextState !=this.state;\r\n// }  этот метод жизненного цикла можно заменить наследованием PureComponent чистой компонентой от реакта\r\n\r\n  let newPostElement = React.createRef();  /* Создали пустую ссылку, в дальнейшем на нее будет ссылаться реакт при создании и написании поста.Далее привяжем ссылку к текст Area */\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n    // props.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value;\r\n  //   props.updateNewPostText(text);\r\n  //   //  let action ={type:'UPDATE-NEW-POST-TEXT', newText:text};\r\n  //   // let action=updateNewPostTextActionCreator(text);\r\n  //   //    props.dispatch(action);\r\n  // } //Упразднено т.к используем форму редакс\r\n\r\n  /*\r\n  let posts=[\r\n    {id:1, post:'Hello, I try to be better', likesCount:12},\r\n    {id:2, post:'Hello, its my second post', likesCount:69},\r\n    {id:3, post:'ZZzzzZZZZ',likesCount:241},\r\n    {id:4, post:'Yo!Yo!YO!',likesCount:245},\r\n    {id:5, post:'HEYYYY MAN',likesCount:364}\r\n  ]\r\n  */\r\n\r\n  let postsElements =\r\n    props.posts.map(p => <Post key={p.id} message={p.post} likesCount={p.likesCount} />);\r\n\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>Мои записи</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      {/* //Когда сасабмитиится форма вызовем колбэк и мы получим все данные из формы  */}\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["492","493"],"import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.';\r\nimport userPhoto from '../../../assets/images/User12.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, IsOwner, updateStatus, savePhoto,saveProfile }) => {\r\n  let [editMode,setEditMode]=useState(false); //Деструктуризация массива (локальный стэйт,изменятся ли статус?)\r\n  \r\n  \r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) { // 1 Передаем параметр события e, забираем из инпута файл картинку открытую\r\n      savePhoto(e.target.files[0])                      //Вызываю колбэк и передаю во внешний мир то,что мы вызвали\r\n      // props.savePhoto(e.target.files[0] -props убрали тк провели деструктуризацию\r\n    }\r\n  }\r\nconst onSubmit=async(formData)=> { //Промис, сохранить результат и переключение с кнопки Save на Edit происходит, когда дождались результата успешного (промис сработал)\r\n  saveProfile(formData).then(()=>{ //ВЫЗЫВАЕМ КОЛЛБЭК,КОТОРЫЙ ДИСПАТЧИТ-В saveProfile из ProfileDataForm придут стэйты и объект с данными о профиле для передачи из UI в BLL\r\n    setEditMode(false); //Вышли из режима редактирования по нажатию кнопки Save в форме\r\n  })\r\n   \r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {/* Псевдо ложь псевдоистина псевдо классы,если фото нет мы показываем фото из папки */}\r\n        {IsOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        {/* onChange-Вешаем обработчик события,когда фотку загрузили,надо ее подгрузить */}\r\n        {/* INFORMATION+AVA+DESCRIPTION */}\r\n        {editMode \r\n        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>  \r\n        //Передаем инициализац.значения в профайлформу чтоб с нуля не пустые поля отображались а со стартовыми значенияим <ProfileDataForm initialValues={profile} \r\n        :<ProfileData gotoEditMode={()=>{setEditMode(true)}} profile={profile} IsOwner={IsOwner}/>} \r\n        {/* Если editMode режим редактирования то показываем форму для заполнения,если нет редактирования то показываем форму  */}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          </div>\r\n    </div>\r\n  )\r\n\r\n}\r\nconst ProfileData=({profile,IsOwner,gotoEditMode}) => {\r\n  return  <div>\r\n   {IsOwner && <div><button onClick={gotoEditMode}>edit</button></div>} \r\n   {/* В режиме редактирования кнопка редактирования поялвяется,если мы залогинены мы авторизованы */}\r\n  <div>\r\n    <b> Full name </b>{profile.fullName}\r\n  </div>\r\n  <div>\r\n    <b> Looking for a job </b>{profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n  </div>\r\n  {profile.lookingForAJob &&   //Если работу ищем,тру,тогда отобразим дивку с описанием\r\n    <div>\r\n      <b>My Professional Skills</b>: {profile.lookingForAJobDescription}\r\n    </div>\r\n  }\r\n  <div>\r\n    <b> About me </b>{profile.aboutMe}\r\n  </div>\r\n  <div>\r\n    <b> Contacts </b>:{Object.keys(profile.contacts).map(key => { //Пробегаем по массиву map и на базе каждого элемента рисуем компоненту Contact\r\n      return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n    }\r\n    )}\r\n  </div>\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\nexport default ProfileInfo;\r\n","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks..jsx",["494"],"import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  // let stateWithSetState=useState(false);\r\n  // let editMode=stateWithSetState[0];\r\n  // let setEditMode= stateWithSetState[1];\r\n  let [editMode,setEditMode]=useState(false); //Деструктуризация массива (локальный стэйт,изменятся ли статус?)\r\n  let [status,setStatus]=useState(props.status); //Деструктуризация массива (локальный стэйт,что в статусе печатают, как изменяется?)\r\n\r\n  useEffect ( ()=>{         //Используем хук useEffect для синхронизации статуса,перерисует статус при его изменении\r\n    setStatus(props.status);  \r\n  }, [props.status]); //Синхронизируйся, когда изменится статус[props.status]\r\n\r\n  const activateEditMode=() =>{\r\n    setEditMode(true);\r\n  }\r\n  \r\n  const deactivateEditMode=() =>{\r\n    setEditMode(false);\r\n    props.updateStatus(status);//должны отправлять наверх родителю в стэйт инфу о статусе\r\n  }\r\n  const onStatusChange=(e) => {\r\n    setStatus(e.currentTarget.value); \r\n      }\r\n\r\n    return (\r\n  <div>\r\n    { !editMode &&\r\n      <div>\r\n       <b> Status: <span onDoubleClick={activateEditMode} > {props.status || \"-----\"}</span></b>\r\n      </div>\r\n    }\r\n    {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n      </div>\r\n    }\r\n  </div>\r\n)\r\n  }\r\nexport default ProfileStatusWithHooks;\r\n","C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\MyPosts\\Posts\\Post.jsx",["495"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",["496","497"],"import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, TextArea } from '../../Common/FormControl/FormsControls';\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../Common/FormControl/FormsControls.module.css\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ProfileDataForm=({handleSubmit, profile,error}) => { //error параметр из StopSubmit редакс формы для получения кода ошибки\r\n    return  <form onSubmit={handleSubmit}>\r\n    <div><button>Save</button></div> \r\n    {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n    {/* В режиме редактирования кнопка редактирования поялвяется,если мы залогинены мы авторизованы */}\r\n   <div>\r\n     <b> Full name </b>: {createField(\"Full name\",\"fullName\",[],Input)}\r\n     \r\n   </div>\r\n   <div>\r\n     <b> Looking for a job </b>:{createField(\"\",\"lookingForAJob\",[],Input,{type:\"checkbox\"})}\r\n   </div>\r\n   {/* {profile.lookingForAJob &&   //Если работу ищем,тру,тогда отобразим дивку с описанием */}\r\n     <div>\r\n    <b>My Professional Skills</b>:{createField(\"My Professional Skills\",\"lookingForAJobDescription\",[],TextArea)}\r\n     </div>\r\n   \r\n   <div>\r\n     <b> About me </b>\r\n     {createField(\"About me\",\"aboutMe\",[],TextArea)}\r\n   </div>\r\n   <div>\r\n     <b> Contacts </b>:{Object.keys(profile.contacts).map(key => { //Пробегаем по массиву map и на базе каждого элемента рисуем компоненту Contact\r\n       return <div key={key} className={s.contact}> \r\n       <b>{key}:{createField(key,\"contacts.\"+key,[],Input)}</b>\r\n       {/* \"contacts.\"+key в параметрах,тк есть вложенность, контакты передаются вложенно на серверной части.Контакты-ватсап */}\r\n       </div>\r\n     }\r\n     )}\r\n   </div>\r\n   </form>\r\n  } \r\n  {/* //Если в режиме редактирования показываем ProfileDataForm для заполнения данных */}\r\n  \r\n const ProfileDataFormReduxForm =reduxForm({form:\"edit-profile\"})(ProfileDataForm)\r\n\r\n\r\n  export default ProfileDataFormReduxForm","C:\\SPA_socialNetwork\\my-app\\src\\redux\\app-reducer.ts",["498","499","500"],"import { type } from \"os\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType ={\r\n    initialized: boolean;\r\n}\r\n\r\n\r\nlet initialState:InitialStateType= {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state:InitialStateType=initialState, action:any): InitialStateType=> {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: \r\n             return {\r\n             ...state, \r\n             initialized: true, //Стэйт копируем для того,что если будет еще экшен не перезатер наше состояние state\r\n            //  initializedFalse: true Благодаря явной типизации мы не можем ошибиться и добавить в стэйт лишнее\r\n         }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\ntype InintializedSuccessActionType={\r\n    type: typeof INITIALIZED_SUCCESS // \"INITIALIZED_SUCCESS\"\r\n}\r\nexport const inintializedSuccess= (): InintializedSuccessActionType  => ({ type:INITIALIZED_SUCCESS }) //Задиспатчик экшен криэйтор\r\n\r\nexport const initializeApp=()=>(dispatch:any)=>{  //Создаем САНКУ санк криэйтор для инициализации\r\n         let promise= dispatch(getAuthUserData());  //Диспатч не только передает вызов фкункции но и возвращает результат выполнения функции return \r\n         //dispatch(somethingElse());\r\n         //dispatch(somethingElse());\r\n            Promise.all([promise])\r\n            .then(()=>{\r\n             dispatch(inintializedSuccess());\r\n         });        \r\n}       \r\n\r\n\r\nexport default appReducer;",["501","502"],"C:\\SPA_socialNetwork\\my-app\\src\\redux\\auth-reducer.ts",[],"C:\\SPA_socialNetwork\\my-app\\src\\redux\\dialogs-reducer.ts",[],"C:\\SPA_socialNetwork\\my-app\\src\\redux\\sidebar-reducer.ts",["503"]," let initialState= {};\r\n type InitialStateType=typeof initialState\r\n const sidebarReducer= (state=initialState,action:any) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","C:\\SPA_socialNetwork\\my-app\\src\\redux\\profile-reducer.ts",["504","505","506","507","508","509","510"],"import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\nimport { PhotosType, PostType, ProfileType } from \"../Types/types\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS='SAVE_PHOTO_SUCCESS'; // 6. Создаем ЭКШЕН \r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, post: 'Hello, I try to be better', likesCount: 12 },\r\n        { id: 2, post: 'Hello, its my second post', likesCount: 69 },\r\n        { id: 3, post: 'ZZzzzZZZZ', likesCount: 241 },\r\n        { id: 4, post: 'Yo!Yo!YO!', likesCount: 245 },\r\n        { id: 5, post: 'HEYYYY MAN', likesCount: 364 }] as Array<PostType>,\r\n    // newPostText: ' ', //Упразднено, редакс формы\r\n    profile: null as ProfileType | null,\r\n    status: ' ',\r\n    newPostText:''\r\n};\r\n\r\nexport type InitialStateType=typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action:any):InitialStateType=> {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                // post: state.newPostText,\r\n                post: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n            // stateCopy.posts=[...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n        }\r\n        // // case UPDATE_NEW_POST_TEXT: {\r\n        // //     return {\r\n        // //         ...state,\r\n        // //         newPostText: action.newText\r\n        // //     }; -упразднено редакс формы\r\n        //     // stateCopy.newPostText = action.newText;\r\n        //     // return stateCopy;\r\n        // }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        };\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        };\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postID)\r\n            }\r\n        };\r\n        case SAVE_PHOTO_SUCCESS: {   //7. Тип экшена обрабатываем в редьюсере/ 8.Идем в АПИшку и добавляем запрос на сервер\r\n            return {\r\n                ...state,\r\n                profile:{...state.profile, photos:action.photos} as ProfileType\r\n                }\r\n        };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype AddPostActionCreatorType={\r\n    type: typeof ADD_POST\r\n    newPostText:string\r\n}\r\nexport const addPostActionCreator = (newPostText:string):AddPostActionCreatorType => ({ type: ADD_POST, newPostText })\r\n// export const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\ntype SetUserProfileActionType={\r\n    type: typeof SET_USER_PROFILE\r\n    profile:ProfileType\r\n}\r\nexport const setUserProfile = (profile:ProfileType):SetUserProfileActionType => ({ type: SET_USER_PROFILE, profile })\r\ntype SetStatusActionType={\r\n    type: typeof SET_STATUS\r\n    status:string\r\n}\r\nexport const setStatus = (status:string): SetStatusActionType=> ({ type: SET_STATUS, status })\r\ntype DeletePostActionType={\r\n    type: typeof DELETE_POST\r\n    postID:number\r\n}\r\nexport const deletePost = (postID:number):DeletePostActionType => ({ type: DELETE_POST, postID })\r\ntype SavePhotoSuccessActionType={\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos:PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos:PhotosType) => ({ type: SAVE_PHOTO_SUCCESS, photos }) // 5. Создаем ЭКШЕН КРИЭЙТОР (savePhotoSuccess),обновляем массив photos\r\n\r\n\r\nexport const getUserProfile = (userID:number) => async (dispatch:any) => {  //Thunk creator -создаем санку\r\n    const response = await usersAPI.getProfile(userID)\r\n    //    .then(response => {\r\n    dispatch(setUserProfile(response.data)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n\r\n}\r\n\r\nexport const getStatus = (userID:number) => async (dispatch:any) => {  //Thunk creator -создаем санку\r\n    let response = await profileAPI.getStatus(userID);\r\n    // .then(response => {\r\n    dispatch(setStatus(response.data)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n    // });\r\n}\r\n\r\nexport const updateStatus = (status:string) => async (dispatch:any) => {  //Thunk creator -создаем санку\r\n    try {\r\n    let response = await profileAPI.updateStatus(status)\r\n    // .then(response => {\r\n    if (response.data.resultCode === 0) { //Если в ответе на запрос пришел резалтКод=0, то ошибки нет,статус сменился, сетаем статус\r\n        dispatch(setStatus(status)); //ДИСПАТЧАНЬЕ ЭКШЕНОВ ПРИВОДИТ К ИЗМЕНЕНИЮ СТЭЙТА В РЕДЬЮСЕРЕ\r\n    }\r\n    // });\r\n}\r\ncatch (error) {              //Конструкцию асинхронного запроса оборачивают в трай кэтч,трай-все хорошо пробуем-получилось, кэтч-ловим ошибку\r\n\r\n}\r\n}\r\n\r\nexport const savePhoto = (file:any) => async (dispatch:any) => {  //4 Thunk creator -создаем санку для передачи фото\r\n    let response = await profileAPI.savePhoto(file)\r\n    // .then(response => {\r\n    if (response.data.resultCode === 0) { //Если в ответе на запрос пришел резалтКод=0, то ошибки нет,статус сменился, сетаем статус\r\n        dispatch(savePhotoSuccess(response.data.data.photos)); //Если ответ с сервера положительный, фото сохранено на сервере мы диспатчим экшен и меняем фото в UI в браузере\r\n    }                                    // 5. Создаем ЭКШЕН КРИЭЙТОР (savePhotoSuccess)\r\n    //response.data.photos-на сервере лежат фото по такому адресу\r\n    // });\r\n}\r\n\r\n// saveProfile-3)ДОБАВЛЯЕМ САНКУ, ДИСПАТЧИ ДЛЯ РЕДЬЮСЕРА/4) В API добавляем запрос\r\nexport const saveProfile = (profile:ProfileType) => async (dispatch:any,getState:any) => {\r\n    const userId=getState().auth.userId //Вытаскиваем пользовательский ID из другого редьюсера, обращением к СТОРУ\r\n    const response = await profileAPI.saveProfile(profile)\r\n    // .then(response => {\r\n        // debugger;\r\n    if (response.data.resultCode === 0) { //Если в ответе на запрос пришел резалтКод=0, то ошибки нет,статус сменился, сетаем статус\r\n        dispatch(getUserProfile(userId)); //Если ответ с сервера положительный, заново диспатчим санку обнови пользователя и передаем айдишник залогин.пользователя\r\n    }  \r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0]}));\r\n        // Если ошибка есть в запросе на сервер, ловим ошибку и стоп субмитим из формы\r\n        return Promise.reject(response.data.messages[0]);\r\n        // В промис возвращаем ошибку,если у нас она появилась в результате запроса на сервер\r\n    }                                \r\n}\r\n\r\n\r\nexport default profileReducer;","C:\\SPA_socialNetwork\\my-app\\src\\redux\\user-reducer.ts",["511","512"],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\redux\\redux-store.ts",["513"],"import {applyMiddleware, combineReducers,compose,createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport slidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './user-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from \"redux-thunk\";   //Мы подключаем санковый мидлвээр, базовый, который установился по дефолту\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet rootReducer= combineReducers ({\r\nprofilePage:profileReducer,\r\ndialogsPage:dialogsReducer,\r\nsidebar:slidebarReducer,\r\nusersPage: usersReducer,   //Reducer зарегистрировали, в State будет UsersPage теперь\r\nauth:authReducer,\r\napp:appReducer,\r\nform:formReducer\r\n});\r\n// Добавляем строки для работы с расширением стор от хром\r\n\r\ntype RootReducerType= typeof rootReducer //(globalstate:GLOBALSTATE)=>GLOBALSTATE\r\nexport type AppStateType=ReturnType<RootReducerType> //ReturnType-функция возвращает типы данных,которые приходят со всех редьюсеров и формируют глобальный стэйт\r\nlet state:AppStateType\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware))); // Создание нового стора с расширением для хрома\r\n\r\n// let store=createStore(reducers, applyMiddleware(thunkMiddleware.withExtraArgument('string'))); создание старого стора без расширения для хрома\r\n//@ts-ignore\r\nwindow.__store__=store;  //Игнорируем строку typescript\r\n\r\nexport default store;","C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\UsersContainer.tsx",["514","515","516","517","518","519","520","521"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, requestUsers } from '../../redux/user-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../hok/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {getPageSize,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress, getUsers} from '../../redux/users-selectors';\r\nimport { UserType } from '../../Types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType={\r\n  \r\n  currentPage:number\r\n  pageSize:number\r\n  isFetching:boolean\r\n  totalUsersCount:number\r\n  users:Array<UserType>\r\n  followingInProgress:Array<number>\r\n}\r\ntype MapDispatchPropsType={\r\n  getUsers:(currentPage:number, pageSize:number)=>void\r\n  unfollow:(userId:number)=>void //Функция принимает,но ничего не возвращает\r\n  follow:(userId:number)=>void\r\n  // setCurrentPage:()=>void\r\n  // toggleFollowingProgress:()=>void\r\n  \r\n}\r\ntype OwnPropsType={\r\n  pageTitle:string\r\n}\r\ntype PropsType=MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\nclass UsersContainer extends React.Component<PropsType> {           //extends React.Component-благодаря этой записи Реакт за кадром напишет new User и создаст нового пользователя.При этом constructor(props), super(props) можно не писать, делегирование и прокдывание пропсов произойдет за кадром в реакт\r\n\r\n    componentDidMount() {\r\n                 this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n            }\r\n\r\n  onPageChanged=(pageNumber:number) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n      }\r\n    render() {\r\n       \r\n\r\n        return <>\r\n        <h2>{this.props.pageTitle}</h2>\r\n        {this.props.isFetching ? \r\n        <Preloader/>: null}\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        // toggleFollowingProgress={this.props.toggleFollowingProgress}  \r\n        followingInProgress={this.props.followingInProgress}  \r\n        />\r\n        </>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//Используем для создания селектора\r\n// let mapStateToProps = (state) =>{                // mapStateToProps-функция- принимает весь глобальный стэйт целиком и возвращает объект с данными который нам нужен в данной, контейнерной компоненте\r\n// return {\r\n//     users:state.usersPage.users,                // Компонента получает USERS, то есть в презентационной (чистой) компоненте будет users   \r\n//     pageSize:state.usersPage.pageSize,\r\n//     totalUsersCount:state.usersPage.totalUsersCount,  \r\n//     currentPage:state.usersPage.currentPage,\r\n//     isFetching:state.usersPage.isFetching,\r\n//     followingInProgress:state.usersPage.followingInProgress  \r\n// }\r\nlet mapStateToProps = (state:AppStateType):MapStatePropsType =>{                // mapStateToProps-функция- принимает весь глобальный стэйт целиком и возвращает объект с данными который нам нужен в данной, контейнерной компоненте\r\n  return {\r\n      users:getUsers(state),\r\n      // users:getUsersSelector(state),                // Компонента получает USERS, то есть в презентационной (чистой) компоненте будет users   \r\n      pageSize:getPageSize(state),\r\n      totalUsersCount:getTotalUsersCount(state), \r\n      currentPage:getCurrentPage(state),\r\n      isFetching:getIsFetching(state),\r\n      followingInProgress:getFollowingInProgress(state)\r\n  }\r\n\r\n\r\n}\r\n// let mapDispatchToProps =(dispatch)=> {                 // Компонента получает callback-и которые может вызвать\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));            // Диспатчим, передаем результат работы ActionCratora-\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));            // Диспатчим, передаем результат работы ActionCratora-\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber)=> {\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotalUsersCount: (totalCount)=> {\r\n//             dispatch(setTotalUsersCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching)=> {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n        \r\n//     }\r\n\r\n// }\r\n\r\n// let withRedirect=withAuthRedirect(UsersContainer)\r\n// export default connect (mapStateToProps, \r\n// {follow, unfollow,setCurrentPage,toggleFollowingProgress, getUsers}) (withRedirect);      // Путь до функциональной (или классовой) компоненты к которой хотим достучаться. App.js->UserContainer->UsersC\r\n\r\nexport default compose(\r\n  // withAuthRedirect,\r\n  connect<MapStatePropsType,MapDispatchPropsType,OwnPropsType,AppStateType> \r\n  (mapStateToProps,{follow, unfollow, getUsers: requestUsers})\r\n)(UsersContainer)","C:\\SPA_socialNetwork\\my-app\\src\\redux\\users-selectors.ts",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Users\\Users.tsx",[],"C:\\SPA_socialNetwork\\my-app\\src\\api\\api.ts",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["522"],"import React, { ChangeEvent } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\ntype PropsType={\r\n  status:string\r\n  updateStatus:(newStatus:string)=>void\r\n}\r\ntype StateType={\r\n  editMode:boolean\r\n  status:string\r\n}\r\n\r\nclass ProfileStatus extends React.Component<PropsType, StateType> {\r\n  \r\n\r\n  state = {\r\n    editMode: false,\r\n    status:this.props.status\r\n      }\r\n\r\nactivateEditMode (){\r\n  this.setState({\r\n    editMode:true,\r\n  })\r\n\r\n}\r\ndeactivateEditMode (){\r\n  this.setState({\r\n    editMode:false,\r\n    \r\n  });\r\n  this.props.updateStatus(this.state.status);\r\n  }\r\n  onStatusChange=(e:ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      status:e.currentTarget.value\r\n    }); \r\n    \r\n  }\r\n\r\ncomponentDidUpdate (prevProps:PropsType, prevState:StateType) {\r\n  if(prevProps.status !==this.props.status) {\r\n    this.setState({\r\n      status:this.props.status\r\n    });\r\n  }\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n          <div>\r\n            <span onDoubleClick={ this.activateEditMode.bind(this) }> {this.props.status || \"-----\"}</span>\r\n          </div>\r\n        }\r\n        {this.state.editMode &&\r\n          <div>\r\n            <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status} />\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","C:\\SPA_socialNetwork\\my-app\\src\\components\\Login\\Login.tsx",["523"],"import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../Common/FormControl/FormsControls';\r\nimport { required } from '../validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"./../Common/FormControl/FormsControls.module.css\";\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype LoginFormOwnProps={\r\n    captchaUrl:string | null\r\n}\r\n\r\nconst LoginForm:React.FC<InjectedFormProps<LoginFormValuesType,LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input}\r\n                    validate={[required]} />\r\n            </div>\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\",\"password\",[required],Input,{type:\"password\"})}\r\n            {/* <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input}\r\n                    validate={[required]} />\r\n            </div> */}\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> remember me\r\n           </div>\r\n           {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n           {props.captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\",\"captcha\",[required],Input,{})}\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ //a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype MapStateToPropsType={\r\n    captchaUrl:string | null\r\n    isAuth:boolean    | null\r\n}\r\ntype MapDispatchToPropsType={\r\n    login:(email:string, password:string, rememberMe:boolean, captcha:string)=> void\r\n}\r\n\r\nexport type LoginFormValuesType={\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n    captcha:string\r\n}\r\ntype LoginFormValuesTypeKeys=Extract<keyof LoginFormValuesType, string>\r\n\r\nconst Login:React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\r\n    const onSubmit = (formData:LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => ({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","C:\\SPA_socialNetwork\\my-app\\src\\components\\validators\\validators.ts",[],"C:\\SPA_socialNetwork\\my-app\\src\\components\\Common\\FormControl\\FormsControls.tsx",["524"],"import { FieldValidatorType,required } from '../../validators/validators';\r\nimport React from 'react';\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\ntype FormControlPropsType={\r\n    meta:WrappedFieldMetaProps \r\n   }\r\n\r\nconst FormControl:React.FC<FormControlPropsType> = ({meta:{touched,error}, children }) => {\r\n    const hasError=touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const TextArea:React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps}=props;\r\n    // const {input, meta,child ...restProps}=props; \r\n        return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport const Input:React.FC<WrappedFieldProps>  = (props) => {\r\n    const {input, meta,  ...restProps}=props;\r\n     // const {input, meta,child ...restProps}=props; \r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport function createField<FormsKeysType extends string> (placeholder:string | undefined,name:FormsKeysType,\r\n    validators:Array<FieldValidatorType>,\r\n    component:React.FC<WrappedFieldProps>,\r\n    props={},text=\"\") {  //Круглуые скобки, означает что возвращает нам что то функция,можно ставить фигурные скобки но тогда использовать return\r\n    return <div>\r\n    <Field placeholder={placeholder} name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props} /> {text}\r\n\r\n    </div>\r\n} ",{"ruleId":"525","severity":1,"message":"526","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":15},{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","replacedBy":"532"},{"ruleId":"525","severity":1,"message":"533","line":4,"column":7,"nodeType":"527","messageId":"528","endLine":4,"endColumn":27},{"ruleId":"534","severity":1,"message":"535","line":49,"column":26,"nodeType":"536","messageId":"537","endLine":55,"endColumn":10},{"ruleId":"534","severity":1,"message":"535","line":56,"column":32,"nodeType":"536","messageId":"537","endLine":61,"endColumn":10},{"ruleId":"534","severity":1,"message":"535","line":62,"column":27,"nodeType":"536","messageId":"537","endLine":67,"endColumn":10},{"ruleId":"538","severity":1,"message":"539","line":65,"column":53,"nodeType":"540","messageId":"541","endLine":65,"endColumn":55},{"ruleId":"538","severity":1,"message":"539","line":79,"column":65,"nodeType":"540","messageId":"541","endLine":79,"endColumn":67},{"ruleId":"525","severity":1,"message":"542","line":4,"column":17,"nodeType":"527","messageId":"528","endLine":4,"endColumn":30},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"544","line":1,"column":8,"nodeType":"527","messageId":"528","endLine":1,"endColumn":13},{"ruleId":"525","severity":1,"message":"545","line":4,"column":30,"nodeType":"527","messageId":"528","endLine":4,"endColumn":57},{"ruleId":"525","severity":1,"message":"546","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":26},{"ruleId":"525","severity":1,"message":"547","line":13,"column":7,"nodeType":"527","messageId":"528","endLine":13,"endColumn":17},{"ruleId":"525","severity":1,"message":"548","line":45,"column":7,"nodeType":"527","messageId":"528","endLine":45,"endColumn":21},{"ruleId":"538","severity":1,"message":"549","line":63,"column":20,"nodeType":"540","messageId":"541","endLine":63,"endColumn":22},{"ruleId":"550","severity":1,"message":"551","line":8,"column":9,"nodeType":"552","endLine":8,"endColumn":43},{"ruleId":"525","severity":1,"message":"553","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"525","severity":1,"message":"554","line":1,"column":28,"nodeType":"527","messageId":"528","endLine":1,"endColumn":41},{"ruleId":"525","severity":1,"message":"555","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":30},{"ruleId":"525","severity":1,"message":"556","line":4,"column":32,"nodeType":"527","messageId":"528","endLine":4,"endColumn":62},{"ruleId":"525","severity":1,"message":"557","line":30,"column":7,"nodeType":"527","messageId":"528","endLine":30,"endColumn":21},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"550","severity":1,"message":"551","line":7,"column":5,"nodeType":"552","endLine":7,"endColumn":58},{"ruleId":"525","severity":1,"message":"544","line":1,"column":8,"nodeType":"527","messageId":"528","endLine":1,"endColumn":13},{"ruleId":"525","severity":1,"message":"556","line":3,"column":32,"nodeType":"527","messageId":"528","endLine":3,"endColumn":62},{"ruleId":"525","severity":1,"message":"558","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":21},{"ruleId":"550","severity":1,"message":"551","line":14,"column":8,"nodeType":"552","endLine":14,"endColumn":47},{"ruleId":"550","severity":1,"message":"551","line":9,"column":11,"nodeType":"552","endLine":9,"endColumn":48},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"559","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":15},{"ruleId":"550","severity":1,"message":"551","line":13,"column":6,"nodeType":"552","endLine":13,"endColumn":36},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"560","line":3,"column":18,"nodeType":"527","messageId":"528","endLine":3,"endColumn":26},{"ruleId":"525","severity":1,"message":"561","line":3,"column":54,"nodeType":"527","messageId":"528","endLine":3,"endColumn":72},{"ruleId":"525","severity":1,"message":"562","line":3,"column":74,"nodeType":"527","messageId":"528","endLine":3,"endColumn":90},{"ruleId":"525","severity":1,"message":"563","line":4,"column":13,"nodeType":"527","messageId":"528","endLine":4,"endColumn":18},{"ruleId":"525","severity":1,"message":"564","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":18},{"ruleId":"525","severity":1,"message":"546","line":8,"column":10,"nodeType":"527","messageId":"528","endLine":8,"endColumn":26},{"ruleId":"525","severity":1,"message":"565","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":20},{"ruleId":"525","severity":1,"message":"566","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":17},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"550","severity":1,"message":"551","line":12,"column":29,"nodeType":"552","endLine":12,"endColumn":129},{"ruleId":"525","severity":1,"message":"567","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":17},{"ruleId":"525","severity":1,"message":"568","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":18},{"ruleId":"525","severity":1,"message":"526","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":15},{"ruleId":"529","replacedBy":"569"},{"ruleId":"531","replacedBy":"570"},{"ruleId":"525","severity":1,"message":"542","line":4,"column":17,"nodeType":"527","messageId":"528","endLine":4,"endColumn":30},{"ruleId":"525","severity":1,"message":"571","line":17,"column":8,"nodeType":"527","messageId":"528","endLine":17,"endColumn":17},{"ruleId":"525","severity":1,"message":"567","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":17},{"ruleId":"525","severity":1,"message":"568","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":18},{"ruleId":"550","severity":1,"message":"551","line":7,"column":5,"nodeType":"552","endLine":7,"endColumn":58},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"544","line":1,"column":8,"nodeType":"527","messageId":"528","endLine":1,"endColumn":13},{"ruleId":"525","severity":1,"message":"545","line":4,"column":30,"nodeType":"527","messageId":"528","endLine":4,"endColumn":57},{"ruleId":"525","severity":1,"message":"546","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":26},{"ruleId":"538","severity":1,"message":"539","line":28,"column":38,"nodeType":"540","messageId":"541","endLine":28,"endColumn":40},{"ruleId":"550","severity":1,"message":"551","line":8,"column":9,"nodeType":"552","endLine":8,"endColumn":43},{"ruleId":"525","severity":1,"message":"547","line":13,"column":7,"nodeType":"527","messageId":"528","endLine":13,"endColumn":17},{"ruleId":"525","severity":1,"message":"548","line":45,"column":7,"nodeType":"527","messageId":"528","endLine":45,"endColumn":21},{"ruleId":"538","severity":1,"message":"549","line":63,"column":20,"nodeType":"540","messageId":"541","endLine":63,"endColumn":22},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"525","severity":1,"message":"559","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":15},{"ruleId":"525","severity":1,"message":"572","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":21},{"ruleId":"550","severity":1,"message":"551","line":14,"column":6,"nodeType":"552","endLine":14,"endColumn":36},{"ruleId":"525","severity":1,"message":"544","line":1,"column":8,"nodeType":"527","messageId":"528","endLine":1,"endColumn":13},{"ruleId":"525","severity":1,"message":"556","line":3,"column":32,"nodeType":"527","messageId":"528","endLine":3,"endColumn":62},{"ruleId":"550","severity":1,"message":"551","line":12,"column":29,"nodeType":"552","endLine":12,"endColumn":129},{"ruleId":"525","severity":1,"message":"553","line":1,"column":17,"nodeType":"527","messageId":"528","endLine":1,"endColumn":26},{"ruleId":"525","severity":1,"message":"554","line":1,"column":28,"nodeType":"527","messageId":"528","endLine":1,"endColumn":41},{"ruleId":"525","severity":1,"message":"555","line":4,"column":10,"nodeType":"527","messageId":"528","endLine":4,"endColumn":30},{"ruleId":"525","severity":1,"message":"556","line":4,"column":32,"nodeType":"527","messageId":"528","endLine":4,"endColumn":62},{"ruleId":"525","severity":1,"message":"557","line":30,"column":7,"nodeType":"527","messageId":"528","endLine":30,"endColumn":21},{"ruleId":"525","severity":1,"message":"558","line":4,"column":8,"nodeType":"527","messageId":"528","endLine":4,"endColumn":21},{"ruleId":"550","severity":1,"message":"551","line":33,"column":9,"nodeType":"552","endLine":33,"endColumn":80},{"ruleId":"525","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"550","severity":1,"message":"551","line":9,"column":11,"nodeType":"552","endLine":9,"endColumn":48},{"ruleId":"525","severity":1,"message":"565","line":6,"column":10,"nodeType":"527","messageId":"528","endLine":6,"endColumn":20},{"ruleId":"534","severity":1,"message":"535","line":42,"column":3,"nodeType":"536","messageId":"537","endLine":42,"endColumn":90},{"ruleId":"573","severity":1,"message":"574","line":1,"column":10,"nodeType":"527","messageId":"528","endLine":1,"endColumn":14},{"ruleId":"573","severity":1,"message":"565","line":2,"column":10,"nodeType":"527","messageId":"528","endLine":2,"endColumn":20},{"ruleId":"573","severity":1,"message":"566","line":3,"column":10,"nodeType":"527","messageId":"528","endLine":3,"endColumn":17},{"ruleId":"529","replacedBy":"569"},{"ruleId":"531","replacedBy":"570"},{"ruleId":"573","severity":1,"message":"575","line":2,"column":7,"nodeType":"527","messageId":"528","endLine":2,"endColumn":23},{"ruleId":"573","severity":1,"message":"533","line":6,"column":7,"nodeType":"527","messageId":"528","endLine":6,"endColumn":27},{"ruleId":"534","severity":1,"message":"535","line":55,"column":26,"nodeType":"536","messageId":"537","endLine":61,"endColumn":10},{"ruleId":"534","severity":1,"message":"535","line":62,"column":32,"nodeType":"536","messageId":"537","endLine":67,"endColumn":10},{"ruleId":"534","severity":1,"message":"535","line":68,"column":27,"nodeType":"536","messageId":"537","endLine":73,"endColumn":10},{"ruleId":"538","severity":1,"message":"539","line":71,"column":53,"nodeType":"540","messageId":"541","endLine":71,"endColumn":55},{"ruleId":"534","severity":1,"message":"535","line":74,"column":34,"nodeType":"536","messageId":"537","endLine":79,"endColumn":10},{"ruleId":"573","severity":1,"message":"576","line":108,"column":6,"nodeType":"527","messageId":"528","endLine":108,"endColumn":32},{"ruleId":"573","severity":1,"message":"577","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":20},{"ruleId":"538","severity":1,"message":"539","line":99,"column":65,"nodeType":"540","messageId":"541","endLine":99,"endColumn":67},{"ruleId":"573","severity":1,"message":"578","line":24,"column":5,"nodeType":"527","messageId":"528","endLine":24,"endColumn":23},{"ruleId":"573","severity":1,"message":"560","line":3,"column":18,"nodeType":"527","messageId":"528","endLine":3,"endColumn":26},{"ruleId":"573","severity":1,"message":"579","line":3,"column":38,"nodeType":"527","messageId":"528","endLine":3,"endColumn":52},{"ruleId":"573","severity":1,"message":"561","line":3,"column":54,"nodeType":"527","messageId":"528","endLine":3,"endColumn":72},{"ruleId":"573","severity":1,"message":"562","line":3,"column":74,"nodeType":"527","messageId":"528","endLine":3,"endColumn":90},{"ruleId":"573","severity":1,"message":"580","line":3,"column":92,"nodeType":"527","messageId":"528","endLine":3,"endColumn":115},{"ruleId":"573","severity":1,"message":"563","line":4,"column":13,"nodeType":"527","messageId":"528","endLine":4,"endColumn":18},{"ruleId":"573","severity":1,"message":"564","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":18},{"ruleId":"573","severity":1,"message":"546","line":8,"column":10,"nodeType":"527","messageId":"528","endLine":8,"endColumn":26},{"ruleId":"573","severity":1,"message":"543","line":2,"column":8,"nodeType":"527","messageId":"528","endLine":2,"endColumn":9},{"ruleId":"550","severity":1,"message":"551","line":30,"column":33,"nodeType":"552","endLine":30,"endColumn":62},{"ruleId":"573","severity":1,"message":"581","line":1,"column":29,"nodeType":"527","messageId":"528","endLine":1,"endColumn":37},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["582"],"no-negated-in-lhs",["583"],"'UPDATE_NEW_POST_TEXT' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'s' is defined but never used.","'React' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","'withAuthRedirect' is defined but never used.","'addmessage' is assigned a value but never used.","'newMessageBody' is assigned a value but never used.","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'PureComponent' is defined but never used.","'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","'newPostElement' is assigned a value but never used.","'ProfileStatus' is defined but never used.","'MyPosts' is defined but never used.","'setUsers' is defined but never used.","'setTotalUsersCount' is defined but never used.","'toggleIsFetching' is defined but never used.","'axios' is defined but never used.","'usersAPI' is defined but never used.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","'connect' is defined but never used.","'Redirect' is defined but never used.",["582"],["583"],"'Preloader' is defined but never used.","'saveProfile' is defined but never used.","@typescript-eslint/no-unused-vars","'type' is defined but never used.","'InitialStateType' is defined but never used.","'SavePhotoSuccessActionType' is defined but never used.","'PhotosType' is defined but never used.","'state' is defined but never used.","'setCurrentPage' is defined but never used.","'toggleFollowingProgress' is defined but never used.","'required' is defined but never used.","no-global-assign","no-unsafe-negation"]